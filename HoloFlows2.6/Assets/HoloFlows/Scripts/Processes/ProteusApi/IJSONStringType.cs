/* 
 * PROtEUS REST API
 *
 * Accessing the PROtEUS runtime via REST
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;

namespace Processes.Proteus.Rest.Model
{
    /// <summary>
    /// IJSONStringType
    /// </summary>
    [DataContract]
    public partial class IJSONStringType : IJSONType,  IEquatable<IJSONStringType>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IJSONStringType" /> class.
        /// </summary>
        public IJSONStringType(string Name = default(string), string Id = default(string), DataTypeTypeEnum? DataTypeType = default(DataTypeTypeEnum?), string TypeClass = default(string)) : base(Name, Id, DataTypeType, TypeClass)
        {
        }
        
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class IJSONStringType {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as IJSONStringType);
        }

        /// <summary>
        /// Returns true if IJSONStringType instances are equal
        /// </summary>
        /// <param name="input">Instance of IJSONStringType to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IJSONStringType input)
        {
            if (input == null)
                return false;

            return base.Equals(input);
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = base.GetHashCode();
                return hashCode;
            }
        }

    }

}
